
git clone https://github.com/rg3915/estoque.git
cd estoque
python3 -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
python contrib/env_gen.py
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver



'django-insecure--d=)(*irpio38!0m7+f=^4xt-wz8&@8*5-pluj^a4bcm&^2z7t'


sudo apt-get update
sudo apt-get install build-essential checkinstall
sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev

# Baixe e compile o Python
cd /usr/src
sudo wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
sudo tar xzf Python-3.12.0.tgz

cd Python-3.12.0
sudo ./configure --enable-optimizations
sudo make altinstall





# Desative o ambiente virtual atual
deactivate

# Remova o ambiente virtual atual
rm -rf .venv

# Crie um novo ambiente virtual
python3 -m venv .venv

# Ative o novo ambiente virtual
source .venv/bin/activate

# Instale as dependências do projeto
pip install -r requirements.txt




python manage.py makemigrations


python manage.py makemigrations estoque
python manage.py migrate


python manage.py runserver


python manage.py createsuperuser

ver o q esta no banco
python manage.py shell
from projeto.produto.models import Produtos
Produto.objects.all()



python create_data.py



git commit -m "atualizando imagens e cores"
git push origin main



achillesoliveirasouza

gfvY8304qvUH3X6C

mongodb+srv://achillesoliveirasouza:gfvY8304qvUH3X6C@cluster0.32qwf.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

acesso rapido mongo
achillesdb
ceudasmatas123




# MongoDB Configuration (connection to MongoDB Atlas)
MONGO_HOST=cluster0.32qwf.mongodb.net
MONGO_PORT=27017
MONGO_USER=achillesoliveirasouza
MONGO_PASSWORD=gfvY8304qvUH3X6C
MONGO_AUTH_SOURCE=admin
MONGO_DB=ceudasmatasdb  # Adicionando nome do banco de dados

# Django Settings
SECRET_KEY=(7_e3gnu4+)p-h0d32&k9^96-c-7hzm(ta8)+*-dfd$_e)1z*w
DEBUG=True
ALLOWED_HOSTS=ceudasmatascontab.onrender.com, .railway.app, .onrender.com, 127.0.0.1, localhost





DEBUG=True
SECRET_KEY=(7_e3gnu4+)p-h0d32&k9^96-c-7hzm(ta8)+*-dfd$_e)1z*w
ALLOWED_HOSTS=127.0.0.1, .localhost
#DATABASE_URL=postgres://USER:PASSWORD@HOST:PORT/NAME
#DEFAULT_FROM_EMAIL=
#EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
#EMAIL_HOST=
#EMAIL_PORT=
#EMAIL_USE_TLS=
#EMAIL_HOST_USER=
#EMAIL_HOST_PASSWORD=


python test_mongo_connection.py


Inspecionar o uso de recursos
Se o ambiente está com recursos limitados (CPU ou RAM), o Gunicorn pode não conseguir lidar com a carga. Verifique o consumo de recursos:

bash
Copiar
Editar
htop


gunicorn projeto.wsgi:application --log-file -

gunicorn projeto.wsgi:application --log-file - --timeout 60
